# @package _global_
defaults:
  - /pipeline: wt103
  - override /scheduler: cosine_warmup_timm

model_name: hyena-small # 153
model:
  _name_: lm
  d_model: 864
  d_inner: 1728
  n_layer: 18
  vocab_size: 50257
  resid_dropout: 0.0
  embed_dropout: 0.1
  layer:
    _name_: hyena
    emb_dim: 33
    filter_order: 64
    local_order: 3
    l_max: 2048
    fused_fft_conv: False
    modulate: True # What's the usage of modulate
    w: 14
    lr: ${optimizer.lr}
    lr_pos_emb: ${optimizer.lr}
  fused_mlp: True
  fused_dropout_add_ln: True
  residual_in_fp32: True
  pad_vocab_size_multiple: 8

trainer:
  accelerator: gpu
  devices: 4
  num_nodes: 1
  accumulate_grad_batches: ${div_up:${train.global_batch_size}, ${eval:${trainer.devices} * ${dataset.batch_size} * ${trainer.num_nodes}}}
  max_epochs: 1000
  precision: 16
  gradient_clip_val: 1.0
  strategy: null

dataset:
  # batch_size: 32  # Per GPU
  # batch_size: ${eval:"8 if ${train.gpu_mem} <= 16 else (16 if ${train.gpu_mem} <= 24 else 32)"}
  batch_size: 16 # 8 use 15G, 16 use 30G, 24 use 45G, 20 should be 37.5, reasonable
  max_length: 1024

scheduler:
  t_in_epochs: False
  t_initial: ${eval:${div_up:${dataset.__train_len}, ${train.global_batch_size}} * ${trainer.max_epochs}}
  warmup_lr_init: 1e-6
  warmup_t: ${eval:${div_up:${dataset.__train_len}, ${train.global_batch_size}} * ${trainer.max_epochs} * 0.01}
  lr_min: ${eval:0.1 * ${optimizer.lr}}

optimizer:
  lr: 6e-4
  weight_decay: 0.1

train:
  gpu_mem: ${eval:"round(float(__import__('subprocess').check_output('nvidia-smi -i 0 --query-gpu=memory.total --format=csv,noheader,nounits', shell=True).strip().decode()) / 1000)"}
  seed: 2222
  global_batch_size: 512
